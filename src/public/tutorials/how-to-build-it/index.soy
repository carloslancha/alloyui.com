{namespace tutorials.build.index}

/**
 * This template will be rendered by SoyWeb when the user loads static.soy.
 * It deliberately includes dummy data so the designer can get a feel for how
 * the task list will appear with real data rather with minimal copy and paste.
 */
{template .soyweb}
{call layout.tutorial}
  {param baseDir: '..' /}
  {param title: 'How to build it?' /}
  {param description: 'As a contributor you need to know how to build AlloyUI core to test your changes.' /}
  {param content}
    <p>The AlloyUI project is available on <a href="https://github.com/liferay/alloy-ui/tree/2.0.x">GitHub</a>.
    You can fork the repository and clone it to your local machine.</p>

    <p>AlloyUI uses <a href="https://github.com/liferay/yogi-alloy">Yogi Alloy</a> to build its modules.</p>

    <h4>1. Dependencies</h4>

    <p>In order to sucessfully run all Yogi Alloy commands you must have the following dependencies installed:</p>

    <ul>
        <li><a href="http://nodejs.org/download/">Node.js</a></li>
        <li><a href="http://compass-style.org/install/">Compass</a></li>
    </ul>

    <h4>2. Install</h4>

    <p>Go to your terminal and install via NPM.</p>

    ```
    $ npm -g install yogi yogi-alloy yuidocjs docpad shifter
    ```

    <h4>3. Initialize dependencies</h4>

    <p>Clone or update all dependencies. Also incorporate <code>ya build</code> task.</p>

    <pre><code class="html">$ ya init</code></pre>

    <p>This will generate a <code>src/aui-foo</code> folder containing the module
    scaffolding.</p>

    <p>Release a new version.</p>

    <pre><code class="html">$ ya release</code></pre>

    <p>This will generate a ready-to-release version of AlloyUI inside of a .zip file.</p>
  {/param}
{/call}
{/template}
